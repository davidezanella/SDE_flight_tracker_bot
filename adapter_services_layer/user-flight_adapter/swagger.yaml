swagger: "2.0"
info:
  version: "1.0.0"
  title: "User-flight adapter"
paths:
  /flight-users:
    get:
      summary: "Gets the list of all the flight-user association"
      produces:
      - "application/json"
      responses:
        200:
          description: "Ok"
          schema:
            type: array
            items:
              $ref: "#/definitions/FlightUser"
    post:
      summary: "Creates a new flight-user association"
      consumes:
      - application/json
      produces:
      - "application/json"
      parameters:
      - in: body
        name: params
        description: The association to create.
        schema:
          $ref: '#/definitions/FlightUser'
        required: true
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/FlightUser"
        400:
          description: "Association already present!"
  /flight-users/{userId}:
    get:
      summary: "Gets all the relations of a user"
      parameters:
      - name: "userId"
        in: "path"
        description: "ID of the user"
        required: true
        type: "number"
      produces:
      - "application/json"
      responses:
        200:
          description: "Ok"
          schema:
            type: array
            items:
              $ref: "#/definitions/FlightUser"
  /flight-users/{userId}/{flightNumber}:
    get:
      summary: "Gets a single relation between a user and a flight"
      parameters:
      - name: "userId"
        in: "path"
        description: "ID of the user"
        required: true
        type: "number"
      - name: "flightNumber"
        in: "path"
        description: "Number of the flight"
        required: true
        type: "string"
      produces:
      - "application/json"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/FlightUserObject"
        404:
          description: "Relation not found!"
    delete:
      summary: "Deletes a relation"
      produces:
      - "application/json"
      parameters:    
      - name: "userId"
        in: "path"
        description: "ID of the user"
        required: true
        type: "number"
      - name: "flightNumber"
        in: "path"
        description: "Number of the flight"
        required: true
        type: "string"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/FlightUser"
        400:
          description: "Invalid parameters!"     


definitions:
  FlightUser:
    type: "object"
    properties:
      userId:
        description: "ID of the user"
        type: "number"
      flightNumber:
        description: "Number of the flight"
        type: "string"
  FlightUserObject:
    type: "object"
    properties:
      user:
        description: "The user"
        type: "object"
        properties:
          id:
            description: "Telegram ID of the user"
            type: "number"
          username:
            description: "Username of the user"
            type: "string"
          firstName:
            description: "Firstname of the user"
            type: "string"
          lastName:
            description: "Lastname of the user"
            type: "string"
          chatId:
            description: "ID of the Telegram chat"
            type: "number"
      flight:
        description: "The flight"
        type: "object"
        properties:
          flightId:
            type: "string"
            description: "ID of the flight"
          depAirport:
            description: "IATA code of the departure airport"
            type: "string"
          arrAirport:
            description: "IATA code of the arrival airport"
            type: "string"
          depTime:
            description: "Time of the departure"
            type: "string"
            format: "date-time"
          arrTime:
            description: "Time of the arrival"
            type: "string"
            format: "date-time"
          status:
            type: "string"
            description: "Status of the flight"
            enum:
            - "FE"
            - "OT"
            - "DL"
            - "NO"
            - "ARR"